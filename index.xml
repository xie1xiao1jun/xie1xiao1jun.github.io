<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology blog by xiexiaojun</title>
    <link>https://xie1xiao1jun.github.io/</link>
    <description>Recent content on Technology blog by xiexiaojun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 18 May 2019 16:01:23 +0800</lastBuildDate>
    
        <atom:link href="https://xie1xiao1jun.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>大驼峰转换工具</title>
      <link>https://xie1xiao1jun.github.io/post/bigcamel/</link>
      <pubDate>Sat, 18 May 2019 16:01:23 +0800</pubDate>
      
      <guid>https://xie1xiao1jun.github.io/post/bigcamel/</guid>
      
        <description>

&lt;h2 id=&#34;git-命令&#34;&gt;git 命令&lt;/h2&gt;

&lt;h1 id=&#34;大驼峰转换工具&#34;&gt;大驼峰转换工具&lt;/h1&gt;

&lt;p&gt;法则
基本满足大驼峰命名法则 首字母大写 “_” 忽略后大写&lt;/p&gt;

&lt;p&gt;大驼峰到网络标准json串自动转换&lt;/p&gt;

&lt;p&gt;带有特殊字符特殊处理：如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;ACL&amp;quot;, &amp;quot;API&amp;quot;, &amp;quot;ASCII&amp;quot;, &amp;quot;CPU&amp;quot;, &amp;quot;CSS&amp;quot;, &amp;quot;DNS&amp;quot;, &amp;quot;EOF&amp;quot;, &amp;quot;GUID&amp;quot;, &amp;quot;HTML&amp;quot;, &amp;quot;HTTP&amp;quot;, &amp;quot;HTTPS&amp;quot;, &amp;quot;ID&amp;quot;, &amp;quot;IP&amp;quot;, &amp;quot;JSON&amp;quot;, &amp;quot;LHS&amp;quot;, &amp;quot;QPS&amp;quot;, &amp;quot;RAM&amp;quot;, &amp;quot;RHS&amp;quot;, &amp;quot;RPC&amp;quot;, &amp;quot;SLA&amp;quot;, &amp;quot;SMTP&amp;quot;, &amp;quot;SQL&amp;quot;, &amp;quot;SSH&amp;quot;, &amp;quot;TCP&amp;quot;, &amp;quot;TLS&amp;quot;, &amp;quot;TTL&amp;quot;, &amp;quot;UDP&amp;quot;, &amp;quot;UI&amp;quot;, &amp;quot;UID&amp;quot;, &amp;quot;UUID&amp;quot;, &amp;quot;URI&amp;quot;, &amp;quot;URL&amp;quot;, &amp;quot;UTF8&amp;quot;, &amp;quot;VM&amp;quot;, &amp;quot;XML&amp;quot;, &amp;quot;XMPP&amp;quot;, &amp;quot;XSRF&amp;quot;, &amp;quot;XSS&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下采用golang实现&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;数据初始化：&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;// Copied from golint
var commonInitialisms = []string{&amp;quot;ACL&amp;quot;, &amp;quot;API&amp;quot;, &amp;quot;ASCII&amp;quot;, &amp;quot;CPU&amp;quot;, &amp;quot;CSS&amp;quot;, &amp;quot;DNS&amp;quot;, &amp;quot;EOF&amp;quot;, &amp;quot;GUID&amp;quot;, &amp;quot;HTML&amp;quot;, &amp;quot;HTTP&amp;quot;, &amp;quot;HTTPS&amp;quot;, &amp;quot;ID&amp;quot;, &amp;quot;IP&amp;quot;, &amp;quot;JSON&amp;quot;, &amp;quot;LHS&amp;quot;, &amp;quot;QPS&amp;quot;, &amp;quot;RAM&amp;quot;, &amp;quot;RHS&amp;quot;, &amp;quot;RPC&amp;quot;, &amp;quot;SLA&amp;quot;, &amp;quot;SMTP&amp;quot;, &amp;quot;SQL&amp;quot;, &amp;quot;SSH&amp;quot;, &amp;quot;TCP&amp;quot;, &amp;quot;TLS&amp;quot;, &amp;quot;TTL&amp;quot;, &amp;quot;UDP&amp;quot;, &amp;quot;UI&amp;quot;, &amp;quot;UID&amp;quot;, &amp;quot;UUID&amp;quot;, &amp;quot;URI&amp;quot;, &amp;quot;URL&amp;quot;, &amp;quot;UTF8&amp;quot;, &amp;quot;VM&amp;quot;, &amp;quot;XML&amp;quot;, &amp;quot;XMPP&amp;quot;, &amp;quot;XSRF&amp;quot;, &amp;quot;XSS&amp;quot;}
var commonInitialismsReplacer *strings.Replacer
var uncommonInitialismsReplacer *strings.Replacer

func init() {
	var commonInitialismsForReplacer []string
	var uncommonInitialismsForReplacer []string
	for _, initialism := range commonInitialisms {
		commonInitialismsForReplacer = append(commonInitialismsForReplacer, initialism, strings.Title(strings.ToLower(initialism)))
		uncommonInitialismsForReplacer = append(uncommonInitialismsForReplacer, strings.Title(strings.ToLower(initialism)), initialism)
	}
	commonInitialismsReplacer = strings.NewReplacer(commonInitialismsForReplacer...)
	uncommonInitialismsReplacer = strings.NewReplacer(uncommonInitialismsForReplacer...)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;转换大驼峰函数：&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;/*
	转换为大驼峰命名法则
	首字母大写，“_” 忽略后大写
*/
func Marshal(name string) string {
	if name == &amp;quot;&amp;quot; {
		return &amp;quot;&amp;quot;
	}

	temp := strings.Split(name, &amp;quot;_&amp;quot;)
	var s string
	for _, v := range temp {
		vv := []rune(v)
		if len(vv) &amp;gt; 0 {
			if bool(vv[0] &amp;gt;= &#39;a&#39; &amp;amp;&amp;amp; vv[0] &amp;lt;= &#39;z&#39;) { //首字母大写
				vv[0] -= 32
			}
			s += string(vv)
		}
	}

	s = uncommonInitialismsReplacer.Replace(s)
	//smap.Set(name, s)
	return s
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;回退函数&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;/*
  回退网络模式
*/
func UnMarshal(name string) string {
	const (
		lower = false
		upper = true
	)

	if name == &amp;quot;&amp;quot; {
		return &amp;quot;&amp;quot;
	}

	var (
		value                                    = commonInitialismsReplacer.Replace(name)
		buf                                      = bytes.NewBufferString(&amp;quot;&amp;quot;)
		lastCase, currCase, nextCase, nextNumber bool
	)

	for i, v := range value[:len(value)-1] {
		nextCase = bool(value[i+1] &amp;gt;= &#39;A&#39; &amp;amp;&amp;amp; value[i+1] &amp;lt;= &#39;Z&#39;)
		nextNumber = bool(value[i+1] &amp;gt;= &#39;0&#39; &amp;amp;&amp;amp; value[i+1] &amp;lt;= &#39;9&#39;)

		if i &amp;gt; 0 {
			if currCase == upper {
				if lastCase == upper &amp;amp;&amp;amp; (nextCase == upper || nextNumber == upper) {
					buf.WriteRune(v)
				} else {
					if value[i-1] != &#39;_&#39; &amp;amp;&amp;amp; value[i+1] != &#39;_&#39; {
						buf.WriteRune(&#39;_&#39;)
					}
					buf.WriteRune(v)
				}
			} else {
				buf.WriteRune(v)
				if i == len(value)-2 &amp;amp;&amp;amp; (nextCase == upper &amp;amp;&amp;amp; nextNumber == lower) {
					buf.WriteRune(&#39;_&#39;)
				}
			}
		} else {
			currCase = upper
			buf.WriteRune(v)
		}
		lastCase = currCase
		currCase = nextCase
	}

	buf.WriteByte(value[len(value)-1])

	s := strings.ToLower(buf.String())
	return s
}

&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;测试：&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;func Test_cache(t *testing.T) {
	SS := &amp;quot;OauthIDAPI&amp;quot;

	tmp0 := UnMarshal(SS)
	fmt.Println(tmp0)
	tmp1 := Marshal(tmp0)
	fmt.Println(tmp1)

	if SS != tmp1 {
		fmt.Println(&amp;quot;false.&amp;quot;)
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输入:
OauthIDAPI
输出：
oauth_id_api
OauthIDAPI&lt;/p&gt;

&lt;p&gt;5:传送门：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/xie1xiao1jun/public/tree/master/mybigcamel&#34;&gt;github&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>git 使用帮助文档</title>
      <link>https://xie1xiao1jun.github.io/post/githelp/</link>
      <pubDate>Wed, 01 May 2019 16:01:23 +0800</pubDate>
      
      <guid>https://xie1xiao1jun.github.io/post/githelp/</guid>
      
        <description>

&lt;h2 id=&#34;git-命令&#34;&gt;git 命令&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;建立一个分支&lt;br /&gt;
&lt;code&gt;git branch &amp;lt;项目名字 feature/test&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后检查分支是否创建成功&lt;br /&gt;
&lt;code&gt;git branch （q,退出）&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换到新分支&lt;br /&gt;
&lt;code&gt;git checkout &amp;lt;项目名字 feature/test&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看当前所有的更改情况&lt;br /&gt;
&lt;code&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看具体的变动&lt;br /&gt;
&lt;code&gt;git diff &amp;lt;文件名&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看commit历史&lt;br /&gt;
&lt;code&gt;git log&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;回滚&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git log
    
//如commit 05d1d38601df7d4acd5b09d30d3bab516bf91b0f，回退到该commit
//一般选取commit号的前6位就可以了
git reset --hard 05d1d3
    
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将改动提交到新分支上&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add . 
    
git commit -m &amp;quot;tmp&amp;quot;
    
git push &amp;lt;origin feature/xxx&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;合并分支 （ezmr）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch &amp;lt; uat/garencieres &amp;gt;
 git branch &amp;lt; 目标分支&amp;gt;
git merge &amp;lt;feature/garencieres 自己要合并的分支&amp;gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;更新分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git remote update
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;删除分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; git branch -d &amp;lt;项目名字 feature/test&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;拉取分支最新的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git pull origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>About</title>
      <link>https://xie1xiao1jun.github.io/about/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://xie1xiao1jun.github.io/about/</guid>
      
        <description>&lt;p&gt;Contact to me:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://hospital.xxjwxc.cn/postcardserver/file/qrcode/oUq8a0eTRg8qaCLf_AaYuIXS63wk.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Personal blog:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/xie1xiao1jun&#34;&gt;csdn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xie1xiao1jun&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hospital.xxjwxc.cn/postcardserver/file/qrcode/oUq8a0eTRg8qaCLf_AaYuIXS63wk.jpg&#34;&gt;find me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/xie1xiao1jun&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
